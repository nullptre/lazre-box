name: Build Docker Image

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Clone additional repositories
        # LAZRE_BOX_PAT is a custom token with read access to all the repositories, must be set in the repository settings (Secrets and Variables -> Actions -> New repository secret)
        run: |
          git clone https://${{ secrets.LAZRE_BOX_PAT }}@github.com/nullptre/lazre.git lazre
          git clone https://${{ secrets.LAZRE_BOX_PAT }}@github.com/nullptre/bot915.git bot915
          git clone https://${{ secrets.LAZRE_BOX_PAT }}@github.com/nullptre/taggregator.git taggregator

      - name: Verify repository contents
        run: |
          echo "Checking lazre repository:"
          ls -la lazre/
          echo "Checking bot915 repository:"
          ls -la bot915/
          echo "Checking taggregator repository:"
          ls -la taggregator/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=sha,format=long

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64